#!/usr/bin/ruby
# -*- coding: utf-8 -*-

require 'pp'
require 'open3'
require 'yaml'


# 各種設定
rcms_sites_dir = '/Users/diverta/rcms/RCMS-sites'
rcms_open_dev_dir = '/Users/diverta/rcms/RCMS-OpenDev-ClosedBeta/nfs'

docker_dir = '/Users/diverta/rcms/docker'

docker_ip = "192.168.59.103"

virtual_host_url = ARGV[0]

install_cmds=STDIN.gets.split("|")

#virtual_host_urlを取得
# virtual_host = install_cmds[1].match(/VIRTUAL_HOST=(?<url>\S*)/)
# virtual_host_url = virtual_host[:url]

#site_idを取得
site_id = install_cmds[1].match(/rcms-(?<site_id>\d*)/)[:site_id]

p site_id
p virtual_host_url


# dockerfileを書き換える

# dockerfileを取得
http_regex = /(https?:\/\/[^\"]*)/
install_cmds[0].match(http_regex)

docker_file = `curl -L "#{$1}"`

docker_cmds = docker_file.split("\n")

admin_password = ""
new_cmds = Array.new

#doker_fileを書き換え
docker_cmds.each_with_index do |cmd,i|
  if cmd.match(http_regex) then

    rcms_install_shell = `curl -L "#{$1}"`

    admin_password = rcms_install_shell.match(/login_pwd='(?<admin_password>\w*)'/)[:admin_password]
    p admin_password

    rcms_install_shell.gsub!(docker_ip,virtual_host_url)

    rcms_install_cmds = rcms_install_shell.split("\n")
    rcms_install_cmds.each_with_index do |rcms_cmd,j|
      next if rcms_cmd.match("#") || rcms_cmd.empty? || j==1

      if rcms_cmd.match("RUN_LIST_JSON") then
        rcms_cmd.gsub!('"${RUN_LIST_JSON}"','/usr/local/chef/bin/run_list_rcms.json')
      end

      #毎回/etc/init.d/postgresql-9.4 startをスタートさせないといけない
      #はまった
      if rcms_cmd.match("chef-solo")  || rcms_cmd.match("postgres") then
        rcms_cmd = '/etc/init.d/postgresql-9.4 start && ' + rcms_cmd
      end

      new_cmd = 'RUN '
      new_cmd += rcms_cmd
      new_cmds.push(new_cmd)
    end
  else
    new_cmds.push(cmd)
  end
end

new_cmds.push("ADD rcms_util.rb /home/rcms/")
new_cmds.push("RUN ruby /home/rcms/rcms_util.rb #{site_id}")

new_docker_file = new_cmds.join("\n")

#new_docker_file.gsub!(admin_password,"Password")

#cmdを書き換える
split_cmds = install_cmds[1].split(" ")
new_docker_cmds = Array.new
skip_index = 100

split_cmds.each_with_index do |cmd,i|
  if skip_index == 100 then
    if !/\&\&/.match(cmd) then
      next
    else
      skip_index = 0
      next
    end
  end

  next if skip_index == i

  if /^-v$/.match(cmd) || /^-p$/.match(cmd) then
    skip_index = i+1
    next
  end

  if /^-d$/.match(cmd) then
    new_docker_cmds.push("-v")
    new_docker_cmds.push(rcms_open_dev_dir+":/home/rcms/nfs")

    file_a = "/lib/modules"
    if File.exist?("#{rcms_sites_dir}/#{site_id}#{file_a}") then
      new_docker_cmds.push("-v")
      new_docker_cmds.push("#{rcms_sites_dir}/#{site_id}#{file_a}:/home/rcms/#{site_id}#{file_a}")
    end

    file_b = "/lib/config.php"
    if File.exist?("#{rcms_sites_dir}/#{site_id}#{file_b}") then
      new_docker_cmds.push("-v")
      new_docker_cmds.push("#{rcms_sites_dir}/#{site_id}#{file_b}:/home/rcms/#{site_id}#{file_b}")
    end

    file_c = "/lib/smarty"
    if File.exist?("#{rcms_sites_dir}/#{site_id}#{file_c}") then
      new_docker_cmds.push("-v")
      new_docker_cmds.push("#{rcms_sites_dir}/#{site_id}#{file_c}:/home/rcms/#{site_id}#{file_c}")
    end

    file_d = "/templates"
    if File.exist?("#{rcms_sites_dir}/#{site_id}#{file_d}") then
      Dir::entries("#{rcms_sites_dir}/#{site_id}#{file_d}").each { |f|
        next if /\./.match(f)
        new_docker_cmds.push("-v")
        new_docker_cmds.push("#{rcms_sites_dir}/#{site_id}#{file_d}/#{f}:/home/rcms/#{site_id}#{file_d}/#{f}")
      }
    end

    new_docker_cmds.push("-e")
    new_docker_cmds.push("VIRTUAL_HOST=#{virtual_host_url}")

    new_docker_cmds.push("-p")
    new_docker_cmds.push("22")
  end

  new_docker_cmds.push(cmd)
end

new_docker_cmd = new_docker_cmds.join(" ")

puts new_docker_file
puts new_docker_cmd

pass_config = YAML.load_file("#{docker_dir}/pass.yaml")

if pass_config
  pass_config[site_id] = admin_password
else
  pass_config = {site_id => admin_password}
end

File.open("#{docker_dir}/pass.yaml", "w") do |file|
  YAML.dump(pass_config, file)
end


File.unlink "#{docker_dir}/Dockerfile" if File.exist?("#{docker_dir}/Dockerfile")

File.open("#{docker_dir}/Dockerfile", "w") do |file|
  file.puts(new_docker_file)
end

system("docker build -t rcms-#{site_id} #{docker_dir}")

system(new_docker_cmd)

exit 0
