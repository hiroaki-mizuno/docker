#!/usr/bin/ruby
# -*- coding: utf-8 -*-

require 'pp'
require 'open3'
require 'yaml'


# 各種設定

docker_dir = '/Users/diverta/rcms/docker'
rcms_dir   = '/Users/diverta/rcms'

docker_ip = "192.168.59.103"

virtual_host_url = ARGV[0]

install_cmds = STDIN.gets.split("|")

# 初期化
docker_file_url = ""
new_docker_cmds = Array.new
new_shell_cmds = Array.new
tmp_new_docker_cmds = Array.new

# インストールするshell fileを取得
http_regex = /(https?:\/\/[^\"]*)/
install_cmds[0].match(http_regex)

install_shell_file = `curl -L "#{$1}"`

#site_idを取得
site_id = install_shell_file.match(/rcms-(?<site_id>\d+)/)[:site_id]

# admin_password を取得
admin_password = install_shell_file.match(/login_pwd='(?<admin_password>\w*)'/)[:admin_password]

# コンテナ名を取得
container_nm = install_shell_file.match(/(?<container_nm>\S*-#{site_id}-#{admin_password})/)[:container_nm]

# shell cmdを編集
install_shell_cmds = install_shell_file.split("\n")

pp install_shell_cmds

# shell fileの作成
install_shell_cmds.each_with_index do |cmd,i|
  if i == 1 then
    new_shell_cmds.push("GIT_RCMS=#{docker_dir}")
  end

  # 最後のrm -rfの前でいろいろ実行
  if /rm -Rf/.match(cmd) && i != 1 then
    cmds = ["docker exec #{container_nm} ruby /home/rcms/rcms_util.rb #{site_id}",
            "docker exec #{container_nm} service sshd restart",
            "docker commit #{container_nm} #{virtual_host_url}",
            "docker stop #{container_nm}",
            "docker rm #{container_nm}"
           ]
    new_shell_cmds.push(cmds)
  end

  # docker build
  if /docker build/.match(cmd) then
    #docker_fileを取得
    docker_file_url = cmd.scan(http_regex)[0][0]

    cmds = ["docker build -t rcms-#{site_id} #{docker_dir}",
            "docker run --name #{container_nm} -v $GIT_RCMS/RCMS-OpenDev-ClosedBeta/nfs/:/home/rcms/nfs/ -p 80:80 -p 22 -d rcms-#{site_id} /usr/bin/supervisord"
           ]
    new_shell_cmds.push(cmds)
    next
  end

  new_shell_cmds.push(cmd)
end

pp new_shell_cmds

docker_file = `curl -L "#{docker_file_url}"`
docker_cmds = docker_file.split("\n")

head_docker_cmds = [
                    "RUN mkdir -p /home/diverta/.ssh",
                    "RUN chmod 700 /home/diverta/.ssh",
                    "ADD diverta.pub /home/diverta/.ssh/authorized_keys",
                    "RUN chmod 600 /home/diverta/.ssh/authorized_keys",
                    "RUN chown -R diverta:diverta /home/diverta/.ssh",
                    "ADD rcms_util.rb /home/rcms/",
                    # "ADD .mylib.php /home/rcms/",
                    "ADD sites/#{site_id} /home/rcms/#{site_id}"
                   ]

new_docker_cmds = head_docker_cmds + docker_cmds

#doker_fileを書き換え
docker_cmds.each_with_index do |cmd,i|
  if /postgresql-/.match(cmd) then
    new_docker_cmds.concat(head_docker_cmds)
    cmd.gsub!(docker_ip,virtual_host_url)
  end

  new_docker_cmds.push(cmd)
end

# new_docker_cmds.push("LABEL vhosts_url=#{virtual_host_url}")

new_docker_file = new_docker_cmds.join("\n")
new_shell_file  = new_shell_cmds.join("\n")

new_docker_file.gsub!(admin_password,"password")

puts new_docker_file
puts new_shell_file

unless File.exist?("#{docker_dir}/hosts.yaml")
  File.open("#{docker_dir}/hosts.yaml", "w").close()
end
hosts_config = YAML.load_file("#{docker_dir}/hosts.yaml")

if hosts_config
  hosts_config[virtual_host_url] = site_id
else
  hosts_config = {virtual_host_url => site_id}
end

File.open("#{docker_dir}/hosts.yaml", "w") do |file|
  YAML.dump(hosts_config, file)
end

File.unlink "#{docker_dir}/Dockerfile" if File.exist?("#{docker_dir}/Dockerfile")

File.open("#{docker_dir}/Dockerfile", "w") do |file|
  file.puts(new_docker_file)
end

File.unlink "#{docker_dir}/install_shell" if File.exist?("#{docker_dir}/install_shell")

File.open("#{docker_dir}/install_shell", "w") do |file|
  file.puts(new_shell_file)
end

exit 0

system("sh #{docker_dir}/install_shell")

exit 0
